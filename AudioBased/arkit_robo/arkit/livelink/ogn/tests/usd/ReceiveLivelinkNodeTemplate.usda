#usda 1.0
(
    doc ="""Generated from node description file ReceiveLivelinkNode.ogn
Contains templates for node types found in that file."""
)

def OmniGraph "TestGraph"
{
    token evaluator:type = "push"
    int2 fileFormatVersion = (1, 3)
    token flatCacheBacking = "Shared"
    token pipelineStage = "pipelineStageSimulation"

    def OmniGraphNode "Template_omni_avatar_ReceiveLivelink" (
        docs="""Receive data through Livelink connection."""
    )
    {
        token node:type = "omni.avatar.ReceiveLivelink"
        int node:typeVersion = 1

        # 7 attributes
        custom bool inputs:activate = false (
            docs="""activate livelink connection"""
        )
        custom string inputs:face_filter = "(?!Head)(.*)" (
            docs="""Regular expression to filter facial names/weights"""
        )
        custom string inputs:livelink_host = "0.0.0.0" (
            docs="""livelink server host name"""
        )
        custom uint inputs:livelink_port = 12030 (
            docs="""livelink server port number"""
        )
        custom token inputs:livelink_subject = "Audio2Face" (
            docs="""select a livelink subject name"""
        )
        custom float inputs:time = 0.0 (
            docs="""The current time in seconds"""
        )
        custom float inputs:timeout = 0 (
            docs="""server timeout seconds"""
        )

        # 5 attributes
        custom string outputs:address = "" (
            docs="""activated server address"""
        )
        custom token[] outputs:connected = [] (
            docs="""hostnames of connected clients"""
        )
        custom token[] outputs:face_names = [] (
            docs="""receiving face names"""
        )
        custom float[] outputs:face_weights = [] (
            docs="""receiving face weights"""
        )
        custom token[] outputs:subjects = [] (
            docs="""receiving subject names"""
        )
    }
}
